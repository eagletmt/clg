#compdef clg

_clg() {
  local context curcontext=$curcontext state line
  declare -A opt_args
  local ret=1

  _arguments -C \
    '(-h --help)'{-h,--help}'[Show help]' \
    '(--version)--version[Print the version]' \
    '1: :__clg_commands' \
    '*:: :->args' \
    && ret=0

  case $state in
    (args)
      case $words[1] in
        (clone)
          _arguments -C \
            '(-)*:: :->null_state' \
            && ret=0
          ;;
        (list)
          _arguments -C \
            '--completion[Print local Git repositories for completion]' \
            '(-)*:: :->null_state' \
            && ret=0
          ;;
        (look)
          _arguments -C \
            '1: :__clg_repositories' \
            && ret=0
          ;;
        (help)
          __clg_commands && ret=0
          ;;
      esac
      ;;
  esac

  return ret
}

__clg_repositories() {
  local -a _repos
  _repos=( ${(@f)"$(_call_program repositories clg list --completion)"} )
  _describe -t repositories Repositories _repos
}

__clg_commands() {
  local -a _cmds
  _cmds=(
  'clone:Clone remote Git repository'
  'list:List local Git repositories'
  'look:Look into a local Git repository'
  'help:Print help message'
  )

  _describe -t commands Commands _cmds
}

_clg "$@"
